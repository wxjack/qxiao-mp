package com.qxiao.wx.user.session;

import java.util.ArrayList;
import java.util.List;

public class SessionList {

	/**
	 * session集合
	 */
	public static List<Session> sessionList = new ArrayList<Session>();
	public static String ROLETYPE = "roleType";
	public static String INFO="snsUserInfo";

	/**
	 * 查找session中是否有指定项
	 * 
	 * @param openid session标识
	 * @return 若存在openid相同的session,返回在集合中对应的位置,若不存在返回-1
	 */
	public static int search(String openid) {
		int size = sessionList.size();
		for (int i = 0; i < size; i++) {
			if (sessionList.get(i).getOpenid().equals(openid))
				return i;
		}
		return -1;
	}

	/**
	 * 移除session
	 */
	public static void remove(String openid) {
		int i = search(openid);
		if (i >= 0)
			sessionList.remove(i);
	}

	/**
	 * 向session中存入数据
	 * 
	 * @param name
	 * @param value
	 * @param openid
	 */
	public static void setSeesion(String name, Object value, String openid) {
		System.out.println("setSession " + name + " " + value + " " + openid);
		int i = search(openid);
		if (i >= 0) {
			SessionData data = new SessionData();
			data.setName(name);
			data.setValue(value);
			sessionList.get(i).getSessionDatas().add(data);
		}
	}

	/**
	 * 创建session
	 * 
	 * @param openid
	 */
	public static void setSeesion(String openid) {
		System.out.println("setSeesion " + openid);
		int i = search(openid);
		if (i < 0) {
			// 建立线程
			Session session = new Session();
			// 两个小时会话
			session.setValidTime(120 * 60 * 1000);
			// 当前时间戳
			session.setCreateTime(System.currentTimeMillis());
			// session唯一标识
			session.setOpenid(openid);
			// 添加session
			sessionList.add(session);
		}
	}

	/**
	 * 根据name,获取session对象中键值对
	 * 
	 * @param name
	 * @param openid
	 */
	public static Object getSession(String name, String openid) {
		System.out.println("getData " + name + " " + openid);
		int i = search(openid);
		if (i >= 0) {
			SessionData sessionData = null;
			for (SessionData sData : sessionList.get(i).getSessionDatas()) {
				if (sData.getName().equals(name)) {
					sessionData = sData;
				}
			}
			if (sessionData != null) {
				Object value = sessionData.getValue();
				System.out.println(name + "值为 " + value);
				return value;
			}
		}
		return null;
	}

	/**
	 * 根据name,移除session对象中键值对
	 * 
	 * @param name
	 * @param openid
	 */
	public static void removeData(String name, String openid) {
		int i = search(openid);
		if (i > 0) {
			sessionList.get(i).getSessionDatas().remove(name);
		}
	}
}
