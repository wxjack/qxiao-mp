package com.qxiao.wx.user.controller;

import java.io.File;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.qxiao.wx.user.jpa.service.StudentService;
import com.qxiao.wx.user.util.UploadFile;
import com.qxiao.wx.user.vo.QueryStudentListVo;
import com.qxiao.wx.user.vo.QueryStudentSupplyVo;
import com.qxiao.wx.user.vo.QueryStudentVo;
import com.qxiao.wx.user.vo.StudentSupplyVo;
import com.spring.web.controller.ResponseMessage;
import com.spring.web.utils.HttpServletRequestBody;

@CrossOrigin
@Controller
@RequestMapping("/action/mod-xiaojiao/manage")
public class StudentController {

	@Autowired
	StudentService studentService;
	@Autowired
	UploadFile upload;

	/**
	 * 删除学生
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping(value = "/studentDelete.do", method = RequestMethod.POST)
	@ResponseBody
	public ResponseMessage studentDelete(HttpServletRequest request) {
		ResponseMessage rm = new ResponseMessage();
		try {
			JSONObject object = HttpServletRequestBody.toJSONObject(request);
			String studentId = object.get("studentId").toString();
			studentService.studentDelete(Long.valueOf(studentId));
			rm.setErrorMsg("删除成功");
		} catch (Exception e) {
			rm.setErrorCode(-1);
			rm.setErrorMsg(e.getMessage());
			e.printStackTrace();
		}
		return rm;
	}

	/**
	 * 查询班级所有学生
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping(value = "/queryStudentList.do", method = RequestMethod.POST)
	@ResponseBody
	public ResponseMessage queryStudentList(HttpServletRequest request) {
		ResponseMessage rm = new ResponseMessage();
		try {
			JSONObject object = HttpServletRequestBody.toJSONObject(request);
			String teacherId = object.get("teacherId").toString();
			List<QueryStudentListVo> student = studentService.queryClassIdByTeacherId(Long.valueOf(teacherId));
			rm.setData(student);
		} catch (Exception e) {
			rm.setErrorCode(-1);
			rm.setErrorMsg(e.getMessage());
			e.printStackTrace();
		}
		return rm;
	}

	/**
	 * 完善学生信息
	 * 
	 * @param request
	 * @param res
	 * @return
	 */
	@RequestMapping(value = "/studentSupply.do", method = RequestMethod.POST)
	@ResponseBody
	public ResponseMessage studentSupply(HttpServletRequest request, HttpServletResponse res) {
		ResponseMessage rm = new ResponseMessage();
		try {
			String string = HttpServletRequestBody.toString(request);
			ObjectMapper mapper = new ObjectMapper();
			StudentSupplyVo vo = mapper.readValue(string, StudentSupplyVo.class);
			Map<String, Object> studentSupply = studentService.studentSupply(vo);
			rm.setData(studentSupply);
		} catch (Exception e) {
			rm.setErrorCode(-1);
			rm.setErrorMsg(e.getMessage());
			e.printStackTrace();
		}
		return rm;
	}

	/**
	 * 查询学生信息
	 * 
	 * @param request
	 * @param res
	 * @return
	 */
	@RequestMapping(value = "/studentQuery.do", method = RequestMethod.POST)
	@ResponseBody
	public ResponseMessage studentQuery(HttpServletRequest request, HttpServletResponse res) {
		ResponseMessage rm = new ResponseMessage();
		try {
			JSONObject jsonObject = HttpServletRequestBody.toJSONObject(request);
			String openId = jsonObject.get("openId").toString();
			List<QueryStudentVo> studentQuery = studentService.studentQuery(openId);
			rm.setData(studentQuery);
		} catch (Exception e) {
			e.printStackTrace();
			rm.setErrorCode(-1);
			rm.setErrorMsg(e.getMessage());
		}
		return rm;
	}

	/**
	 * 添加学生
	 * 
	 * @param request
	 * @param res
	 * @return
	 */
	@RequestMapping(value = "/studentAdd.do", method = RequestMethod.POST)
	@ResponseBody
	public ResponseMessage studentAdd(HttpServletRequest request, HttpServletResponse res) {
		ResponseMessage rm = new ResponseMessage();
		try {
			String string = HttpServletRequestBody.toString(request);
			ObjectMapper mapper = new ObjectMapper();
			StudentSupplyVo value = mapper.readValue(string, StudentSupplyVo.class);
			studentService.studentAdd(value);
		} catch (Exception e) {
			e.printStackTrace();
			rm.setErrorCode(-1);
			rm.setErrorMsg(e.getMessage());
		}
		return rm;
	}

	/**
	 * 查询完善学生的信息
	 * 
	 * @param request
	 * @param res
	 * @return
	 */
	@RequestMapping(value = "/queryStudentSupply.do", method = RequestMethod.POST)
	@ResponseBody
	public ResponseMessage queryStudentSupply(HttpServletRequest request, HttpServletResponse res) {
		ResponseMessage rm = new ResponseMessage();
		try {
			JSONObject jsonObject = HttpServletRequestBody.toJSONObject(request);
			String string = jsonObject.get("tel").toString();
			List<QueryStudentSupplyVo> studentSupply = studentService.queryStudentSupply(string);
			rm.setData(studentSupply);
		} catch (Exception e) {
			rm.setErrorCode(-1);
			rm.setErrorMsg(e.getMessage());
			e.printStackTrace();
		}
		return rm;
	}

	/**
	 * 批量添加
	 * 
	 * @param request
	 * @param response
	 * @param openId
	 * @param file
	 * @return
	 */
	@RequestMapping(value = "/studentBatchAdd.do", method = RequestMethod.POST)
	@ResponseBody
	public ResponseMessage studentBatchAdd(HttpServletRequest request, HttpServletResponse response, String openId,
			MultipartFile file) {
		ResponseMessage rm = new ResponseMessage();
		try {
			String fileInfo = upload.getFileInfo(file);
			Integer batchAdd = studentService.studentBatchAdd(new File(fileInfo));
			rm.setData(batchAdd);
		} catch (Exception e) {
			e.printStackTrace();
			rm.setErrorCode(-1);
			rm.setErrorMsg(e.getMessage());
		}
		return rm;
	}

	/**
	 * 修改
	 * 
	 * @param request
	 * @param res
	 * @return
	 */
	@RequestMapping(value = "/studentUpdate.do", method = RequestMethod.POST)
	@ResponseBody
	public ResponseMessage studentUpdate(HttpServletRequest request, HttpServletResponse res) {
		ResponseMessage rm = new ResponseMessage();
		try {
			String jsonObject = HttpServletRequestBody.toString(request);
			ObjectMapper mapper = new ObjectMapper();
			QueryStudentVo vo = mapper.readValue(jsonObject, QueryStudentVo.class);
			studentService.studentUpdate(vo);
			rm.setErrorMsg("修改成功");
		} catch (Exception e) {
			e.printStackTrace();
			rm.setErrorCode(-1);
			rm.setErrorMsg(e.getMessage());
		}
		return rm;

	}
}
